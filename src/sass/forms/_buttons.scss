$button-selectors: $button-selectors-admin !default;

@if $admin-stylesheet == false {
	$button-selectors: $button-selectors-theme + ", " + $button-selectors-admin;
}

#{$button-selectors} {
	@include background-color($button-background-color);
	display: inline-block;
	padding: $button-padding;
	border: $button-border var(--bg-color);
	border-radius: $button-border-radius;
	cursor: pointer;

	&:visited {
		// override styles from Gutenberg stylesheet on :visited
		color: var(--color);
	}

	&:active,
	&:focus {
		outline: 0;
		box-shadow: 0 0 0 3px var(--bg-color-contrast-md);
	}

	&:hover,
	&:active,
	&:focus {
		background-color: var(--bg-color-contrast-sm);
		border-color: var(--bg-color-contrast-sm);
		text-decoration: none;
		// override styles from Gutenberg stylesheet on :active, :focus and :hover
		color: var(--color);
	}

	&:disabled,
	&.disabled:not(:disabled),
	&.loading {
		filter: $button-disabled-filter-effect;
		cursor: $button-disabled-cursor;

		&:active,
		&:focus {
			box-shadow: none;
		}
	}

	&.loading {
		color: transparent !important;

		&::before {
			@include icon-mask( 'update' );
			animation: loading-spin 1s infinite;
			animation-timing-function: linear;
			color: var(--color);
		}

		@keyframes loading-spin {
			0% {
				transform: rotate(0deg);
			}
			100% {
				transform: rotate(360deg);
			}
		}
	}
}

.is-style-outline > .wp-block-button__link {
	padding: $button-padding;
	border-color: currentColor;
	background-color: transparent !important;

	&:hover {
		color: currentColor;
		text-decoration: underline;
	}
	&:active,
	&:focus {
		box-shadow: 0 0 0 3px var(--color-contrast-md);
	}
}
